{
  "name": "xDai Development Court",
  "description": "**Court purpose** \n\nThis court serves to arbitrate disputes arising from software development processes, including disputes between developers and third parties regarding whether the disputed software product aligns with the agreed specified requirements.",
  "summary": "**Policy** \n\n1. Jurors must base their rulings on the software specifications mutually agreed upon by the involved parties prior to the initiation of the dispute.\n\n    - _Example: A written and signed agreement between a developer and her client, or messages exchanged by the parties agreeing on the desired specifications for the final code._\n\n2. Unless agreed otherwise between the parties, the jurors must apply the following criteria:\n\n    a. Issues which do not put assets at risk nor directly affect the essential system functionalities are acceptable, especially with regards to functional, security, usability and performance issues. Issues which indirectly lead to the same impact must be supported by evidence demonstrating a valid execution path.\n      - _Example 1: A suboptimal gas usage for a smart contract implementation is acceptable unless excessively wasteful in a way that hinders usability._\n      - _Example 2: An issue directly leading to a temporary disruption of a core functionality is not acceptable._\n\n    b. Minor deviations from best practices are acceptable, including but not limited to architectural decisions, tooling choices, or coding hygiene, unless such deviations breach section 2.a.\n      - _Example 1: A codebase which mostly does not follow a consistent indentation or variable naming convention is not acceptable._\n      - _Example 2: Best practices (such as KISS, YAGNI, DRY, SOLID, SoC, Low Coupling/High Cohesion) do not apply equally to every type of software project, so a smart contract codebase that does not follow DRY to better adhere to KISS is acceptable._\n\n    c. Issues solely related to accessibility, modularity, interoperability, or other unspecified requirements must be disregarded.\n\n3. In instances where there are no explicitly agreed specifications that apply to the contested deliverable or if the parties provide contradictory evidence on the agreed specifications and there is no certainty on the authenticity of the presented evidence, jurors must rule considering:\n\n    a. The nature of the agreement between the developer and the third party;\n\n    b. The specificities of the software being developed; and\n\n    c. Best practices in software development that are applicable to the specific type of software being developed.\n",
  "requiredSkills": "This court requires a good level of programming proficiency. Jurors are advised to participate in this court only if they possess an intermediate understanding of programming languages, algorithms, and good practices in software development."
}